app:
  title: MyCompany Backstage Portal
  baseUrl: https://backstage.mycompany.com

organization:
  name: My Company

backend:
  baseUrl: https://backstage.mycompany.com
  listen:
    port: 7007
  csp:
    connect-src: ["'self'", 'https:']
  cors:
    origin: https://backstage.mycompany.com
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
    credentials: true
  database:
    client: pg
    connection:
      host: postgres-service  # Ensure this matches your actual Kubernetes PostgreSQL service name
      port: 5432
      user: backstageuser
      password: yourpassword123  # Ensure this is securely stored (e.g., in a secret)
      database: backstage_db
  jiraDashboard:
    projects:
      - id: "DUMMY"
    defaultProjectId: "DUMMY"

integrations:
  github:
    - host: github.com
      token: ${GITHUB_TOKEN}  # Ensure GITHUB_TOKEN is set in your environment
  azure:
    - host: dev.azure.com
      token: ${AZURE_DEVOPS_TOKEN}  # Ensure AZURE_DEVOPS_TOKEN is set in your environment

proxy:
  # Add reverse proxy endpoints here as needed
  # Example:
  # '/example':
  #   target: 'https://example.com'
  #   changeOrigin: true

techdocs:
  builder: 'local'  # 'external' for a separate builder service
  generator:
    runIn: 'docker'  # Ensure Docker is available in production
  publisher:
    type: 'local'  # Use 'awsS3' or 'googleGcs' for production scalability

auth:
  providers:
    guest: {}  # For development, can be replaced with OAuth or other providers for production

scaffolder:
  # Optional: Additional configuration for templates, Git integrations, etc.

catalog:
  import:
    entityFilename: catalog-info.yaml
    pullRequestBranchName: backstage-integration
  rules:
    - allow: [Component, System, API, Resource, Location]
  locations:
    - type: file
      target: ../../examples/entities.yaml
    - type: file
      target: ../../jira/template/template.yaml
      rules:
        - allow: [Template]
    - type: file
      target: ../../examples/org.yaml
      rules:
        - allow: [User, Group]
  useUrlReadersSearch: true  # Enables the new search behavior for URL readers

kubernetes:
  # Ensure correct values for your AKS cluster:
  serviceLocatorMethod:
    type: multiTenant
  clusterLocatorMethods:
    - type: config
      clusters:
        - url: https://mybscluste-bsrgp-12725d-sfl10dvm.hcp.eastus.azmk8s.io:443  # Replace with your actual AKS API server URL
          name: aks-cluster
          authProvider: serviceAccount
          serviceAccountToken:  eyJhbGciOiJSUzI1NiIsImtpZCI6IlFfbDFOVW5UNzU1TG5Fdko2RlljaHc4SFRaVnZ2YWNZbEFGaG95Z0pRSEEifQ.eyJhdWQiOlsiaHR0cHM6Ly9teWJzY2x1c3RlLWJzcmdwLTEyNzI1ZC1zZmwxMGR2bS5oY3AuZWFzdHVzLmF6bWs4cy5pbyIsIlwibXlic2NsdXN0ZS1ic3JncC0xMjcyNWQtc2ZsMTBkdm0uaGNwLmVhc3R1cy5hem1rOHMuaW9cIiJdLCJleHAiOjE3NDcxNDIwODUsImlhdCI6MTc0NzEzODQ4NSwiaXNzIjoiaHR0cHM6Ly9teWJzY2x1c3RlLWJzcmdwLTEyNzI1ZC1zZmwxMGR2bS5oY3AuZWFzdHVzLmF6bWs4cy5pbyIsImp0aSI6IjMwNTcyMDYxLTcxMWItNDhlYy04ZTA3LWE3MjI1Nzk0NjE3NyIsImt1YmVybmV0ZXMuaW8iOnsibmFtZXNwYWNlIjoiZGVmYXVsdCIsInNlcnZpY2VhY2NvdW50Ijp7Im5hbWUiOiJiYWNrc3RhZ2Utc2VydmljZS1hY2NvdW50IiwidWlkIjoiMzI4ZWRiMDUtNTA2Yy00YWJhLWJmNDUtNTMyOGEyZDE2YTZlIn19LCJuYmYiOjE3NDcxMzg0ODUsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDpkZWZhdWx0OmJhY2tzdGFnZS1zZXJ2aWNlLWFjY291bnQifQ.lgnrlziSYDzrHll7bWN8IJpwM1_r-bdZW7VbqTmacCCK9GYLt-LXkSw8Hin2A0C5KCNEjCUT5rl6BwnrhWPVnLojk_GFYIRawJjilRg_8W3hzM5QfJhHfpeZZL8Ay5lTljfGrhONJUAO1Zw3um7UPN1CRVSUK3hpMJ9_FtpOpUO6nXtLVKr70r6CvlUQvfj8OU6dYKcFedIqvWOeL5c3j-GccRms2wl1Dznb1hBlhMTQFVjNY1-8bydVAh9MCPw-aIgrtXqZTUZwaq5iBFRgmEMm2gjm7i_Ix2UdOIGikhouiRhdQo7PSJxXhB8f_SmL0QppnwweNV0IOJFKpBSrOb7MtTRQqM_Si4gKIgs7GeLKXU0hotFfXjudoEapxnxWuAXLi7WBJqt5IHFNinu6Os_A1g3Wx_1oA__CbF51nqNsc98BA4hZelLrGTHfI7FjYlIqFs4r5_hgpevzArpSFjHbeksO6YIvZ0f4DxcrJ6QWd_IbYw0OV-wHzl1jqXcHSG_pOqg7jao7INxn7EF23pGIZdXcGgeaM9-8AS5QHZBG8rOXtnpNlfl6fNQcC9hhUeEzIFzSFZ6arfQzAXvN5wbxKhKeV8ZlDvLBB2lcg6wz_C8ysBxSPWJukRvz3bqbw3_D5dZRbi1GYjUYe_QjbUQc0ps1L-ib35z_Qyd4YGg # Ensure K8S_TOKEN is set securely
          caData: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUU2RENDQXRDZ0F3SUJBZ0lRWnpmYWs4dGlkV1BYQXYzK25uQ1QrVEFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWdGdzB5TlRBMU1USXdOak0zTVRWYUdBOHlNRFUxTURVeE1qQTJORGN4TlZvdwpEVEVMTUFrR0ExVUVBeE1DWTJFd2dnSWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUNEd0F3Z2dJS0FvSUNBUURBCmx4NS92bzliL3RiYnhRTGFzUjdxRlRpQTNXYXdHRHpDbitIaHVKQjMvL3VESmlGbktHVVhCczFtSFZMbWp6T0YKZ2E4cXozM0JRbkRYSSt5V0xQZEtGTW01LytSOER0WkF1VmU2aDluWjlwa1VPeHcvNUtWWVY5ejJQSlp4bkRSVQpYWGRKY3pieDVkaFRhWUsrWWphdVFnbVdEakFpekFaVFJ4ZmtOcUY5Y1E1Y0lEaG1paDFPZkxwVzJwNFFuUWRjCklBZ1hyd2hiWWYyWW1aTklKVnBlVXFWQVpIRWdpdlFsVk1UL2hkM1oxZjRNK1dxRjNyNmZUZlBTR0t5MEdLZy8Kd1dQWUM0SUJ6dVBySWtIMExIUWRPOWJIT1Jkc3NCcEg4MWcxcXNVUk9CMElBa2pXQWxvTFNiQnNHUHF0ZHhhVwpGa2s2QTg1MEZ5ZDJqN3NFRGJXTi9VeFA2Vy9yRmxobXQ1QmY5SUtOWmM3VmtMY1ppR1B2b3V5M2lZUUxQN0RFCmtBWHNPd3lGR084Qm81dytWRnFKSXhBMDNTNGlHdlkrNFdUZDk0REJwR0NjSTd4SytaS3l0UEZ3R3dSTWZjWCsKZzNpQlVtU1ovay9DNVJ1Wm9aYTU0Z25GNjI4K0w2VTVrWVFYUHpNellyODY5b1JBZkE1UU9jYUFDeGI0R0pUaworbVBZVnJtazNqRVo3MkgxemxiWGlHK25XdkVwZWhSbSt4MXhhM0NtaGcveTh0aGxFZG4rL3Z1Q0dCQkFSMmxiCjZjOFZVMjg2ZlpjUElHN0NsRXpsY0lScHNDNmg1emhJVnVXSlo3TVV6QVpjeUkxY05udllCanlsZmpyZzIxeFQKeXU0enA5c2RoSnV5T3JqMG91RjRyeVNSOU5vWnNnSkRYbVpqeTRCem1RSURBUUFCbzBJd1FEQU9CZ05WSFE4QgpBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVVb291SGlqejZvSHpLekloCkJCa3VaVDV1NTZjd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dJQkFCcWlLN05qb0ZQaU9jTWhJY0xXWENCdUhtVWMKTHlxS3N0S0NzU3R6Vk5DcUNtVVVwS2J1eXlwaXlJYXhmOUl0SmxnaE5VakF3SkZmazM4Ymd3akhnTjFrR2ZPRApwNDlJQ1Q0TjlzUjRsQVJXaFcwT1lnRmR3T1hFMW0vNVBCdjl6MkdvUm5RN3VCTnFiV3BqWnVTNEIxREx4KzNECm5zQnphUzFaSlp4eEE3bzRXWmtXSGtvNkFSSFFUSWxJVytzVS9DWFByc3h6WW9oeml2QjI5TjM4Tzl1SWNuMEsKRE5PakJEUExqNjZqdGlsRUl5Tm9vbW1CUFdkMUZtb1ZtYVhZZDREMU1UeGpSZVMvZDdXUnltOUw2Qk5Wd3NhQgpYOVlVZHlBMzk3Ym1DblFFeW9sZFlnSlA5T2ZzSFYxQm5qMWIxUEFBb2FvT2ZWV25xZWd2WVpwS0RtSEtqS0JaCkVRR3FIbDNOZVFMdlB5ajdsS2ZkOE1YbU1aaTdNWFMzMk9WaHJreU9yRmVRQW1QWHlvUG5sdkhuNUduWFp5ZngKQjM3ZXR4L2kzZitrU1lGalN1SHFKYmlCV2F1Rm95NHVNVjltcERtNXFscUtyNVRFc29WOWJJVmh4SzdjZnpacApUUmhxb3J5OFdHNVpTN3NhUThTNW9IWHhXVmZBU1MvSDN4R3VmejJRcnRvNTQ1NXJCOEg2bFh6QjBoUzdNd2RnCm4xNUdXNDVNb0UzYkpFaWdCUnRpTkNXZmxwVTZ2UnE3V1NFYXRhdG1CV29iL1RnWTkwMndMUkczekNZY2tMZVUKWGRxOUNNVlNlMGR0MHdxUzg0eWdERnd5K3lWWnNQK0hQdHRZZDU0QW1HVTZld3Uwak5VN1NDcjV2Vmd5czRvVApnZkc0YnYyNEZkZ3hZY3hzCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K  # Ensure K8S_CA_DATA is set securely

permission:
  enabled: true  # Keep this as true for managing permissions in your Backstage instance
 
